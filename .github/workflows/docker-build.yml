name: ci
run-name: ðŸ¦† Build Docker Image ${{ github.repository.name }} on ${{ github.event }} ðŸš€
on:
  push:
    branches:
      - "develop"

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
          status: ${{ steps.check_files.outputs.files_exists }}
    steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Check file existence
          id: check_files
          uses: andstor/file-existence-action@v1
          with:
            files: "DOCKERFILE"
            ignore_case: true
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.taggerDryRun.outputs.new_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Minor version for each merge
        id: taggerDryRun
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true
          DEFAULT_BUMP: PATCH
          INITIAL_VERSION: 1.0.0
      - name: echo new tag
        run: |
          echo "The next tag version will be: ${{ steps.taggerDryRun.outputs.new_tag }}"
  build:
    needs: check
    if: needs.check.outputs.status == 'true'
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Docker meta
        id:   meta
        uses: docker/metadata-action@v5
        with: 
          images: |
            mwgevans/app
            ghcr.io/mwgevans/app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags}}
          labels: ${{ steps.meta.outputs.labels}}   